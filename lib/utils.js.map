{"version":3,"sources":["../src/utils.js"],"names":[],"mappings":";;;;;QAEgB,UAAU,GAAV,UAAU;QAIV,QAAQ,GAAR,QAAQ;QAIR,SAAS,GAAT,SAAS;QAIT,WAAW,GAAX,WAAW;QAIX,OAAO,GAAP,OAAO;QAIP,QAAQ,GAAR,QAAQ;QAIR,QAAQ,GAAR,QAAQ;QAIR,IAAI,GAAJ,IAAI;QAIJ,IAAI,GAAJ,IAAI;;;;oBAlCH,MAAM;;;;AAEhB,SAAS,UAAU,CAAC,CAAC,EAAE;AAC1B,WAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,mBAAmB,CAAC;CACpE;;AAEM,SAAS,QAAQ,CAAC,CAAC,EAAE;AACxB,WAAO,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC;CAC9C;;AAEM,SAAS,SAAS,CAAC,CAAC,EAAE;AACzB,WAAO,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;CAClC;;AAEM,SAAS,WAAW,CAAC,CAAC,EAAE;AAC3B,WAAO,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;CAC7B;;AAEM,SAAS,OAAO,CAAC,CAAC,EAAE;AACvB,WAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,gBAAgB,CAAC;CACjE;;AAEM,SAAS,QAAQ,CAAC,CAAC,EAAE;AACxB,WAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,iBAAiB,CAAC;CAClE;;AAEM,SAAS,QAAQ,CAAC,CAAC,EAAE;AACxB,WAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,iBAAiB,CAAC;CAClE;;AAEM,SAAS,IAAI,CAAC,CAAC,EAAE;AACpB,WAAO,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CAC/C;;AAEM,SAAS,IAAI,CAAC,KAAK,EAAE;AACxB,SAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC;AAClD,SAAK,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACjD,SAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,aAAa,GAAG,KAAK,CAAC;AACvD,WAAO,kBAAK,OAAO,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,OAAO,MAAM,KAAK,WAAW,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;CACnG","file":"utils.js","sourcesContent":["import util from \"util\";\n\nexport function isFunction(v) {\n    return Object.prototype.toString.call(v) === \"[object Function]\";\n}\n\nexport function isObject(v) {\n    return v !== null && typeof v === 'object';\n}\n\nexport function isPromise(v) {\n    return v && isFunction(v.then);\n}\n\nexport function isImmutable(v) {\n    return isFunction(v.toJS);\n}\n\nexport function isArray(v) {\n    return Object.prototype.toString.call(v) === \"[object Array]\";\n}\n\nexport function isString(v) {\n    return Object.prototype.toString.call(v) === \"[object String]\";\n}\n\nexport function isNumber(v) {\n    return Object.prototype.toString.call(v) === \"[object Number]\";\n}\n\nexport function toJS(v) {\n    return v && isImmutable(v) && v.toJS() || v;\n}\n\nexport function insp(value) {\n    value = isImmutable(value) ? value.toJS() : value;\n    value = isArray(value) ? value.join(\".\") : value;\n    value = isFunction(value.then) ? \"__promise__\" : value;\n    return util.inspect(value, {colors: typeof window === \"undefined\", depth: 0}).replace('\\n', '');\n}"]}