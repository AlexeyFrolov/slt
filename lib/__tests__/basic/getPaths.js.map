{"version":3,"sources":["../../../src/__tests__/basic/getPaths.js"],"names":[],"mappings":";;;;qBAAkB,aAAa;;;;gCACb,qBAAqB;;;;yBACxB,WAAW;;;;AAE1B,QAAQ,CAAE,UAAU,EAAE,YAAM;;;;;;;AAOxB,MAAE,CAAE,kCAAkC,EAAE,YAAM;AAC1C,YAAI,KAAK,GAAG;AACR,2BAAe,EAAE,sBAAC,KAAK,EAAK,EAE3B;SACJ,CAAC;;AAEF,YAAI,KAAK,GAAG;AACR,qBAAS,EAAE;AACP,qBAAK,EAAE,KAAK;AACZ,uBAAO,EAAE;AACL,0BAAM,EAAE,EAAE;iBACb;aACJ;AACD,sBAAU,EAAC,EAAE;SAChB,CAAC;;;KAIL,CAAC,CAAA;CACL,CAAC,CAAC","file":"getPaths.js","sourcesContent":["import Slots from \"../../slots\";\nimport rules from \"./data/rulesPromise\";\nimport im from \"immutable\";\n\ndescribe ('getPaths', () => {\n\n    //it ('should return correct paths', () => {\n    //    let val = im.fromJS({a: {b: 1, c: {f: 6}, d:3}, c: 3, m: {v: 3}});\n    //    console.log(Slots.getMapPaths(val).toJS());\n    //});\n\n    it ('should find all rules on the way', () => {\n        let rules = {\n            \"request.route\": (route) => {\n\n            }\n        };\n\n        let state = {\n            \"request\": {\n                \"url\": \"url\",\n                \"route\": {\n                    \"name\": \"\"\n                }\n            },\n            \"request2\":\"\"\n        };\n\n        //expect(Slots.getPaths([], state)).toEqual(Slots.getPaths([\"request\"], state.request));\n\n    })\n});"]}